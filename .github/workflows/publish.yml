name: Version and Publish

on:
  push:
    branches:
      - master

jobs:
  version-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --global user.name 'Shanewas Ahmed'
          git config --global user.email 'shanewasahmed@gmail.com'

      - name: Analyze commit messages
        id: analyze
        run: |
          LATEST_COMMIT_MSG=$(git log -1 --pretty=%B)
          if echo "$LATEST_COMMIT_MSG" | grep -q "^BREAKING CHANGE" || echo "$LATEST_COMMIT_MSG" | grep -q "^feat!:"; then
            echo "::set-output name=release_type::major"
          elif echo "$LATEST_COMMIT_MSG" | grep -q "^feat:"; then
            echo "::set-output name=release_type::minor"
          else
            echo "::set-output name=release_type::patch"
          fi

      - name: Update version and CHANGELOG
        if: steps.analyze.outputs.release_type != 'patch'
        run: |
          npm run release:${{ steps.analyze.outputs.release_type }} -- --skip.tag true

      - name: Commit CHANGELOG and version
        if: steps.analyze.outputs.release_type != 'patch'
        run: |
          git add CHANGELOG.md package.json package-lock.json
          VERSION=$(node -p "require('./package.json').version")
          git commit -m "chore(release): v$VERSION [skip ci]"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push --follow-tags

      - name: Publish to npm
        if: steps.analyze.outputs.release_type != 'patch'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        if: steps.analyze.outputs.release_type != 'patch'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: |
            See [CHANGELOG](CHANGELOG.md) for details.
          draft: false
          prerelease: false